

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 29 17:35:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F26K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTCbits	set	3970
    53  0000                     _PORTBbits	set	3969
    54  0000                     _PORTB	set	3969
    55  0000                     _INTCONbits	set	4082
    56  0000                     _INTCON2bits	set	4081
    57  0000                     _TRISA	set	3986
    58  0000                     _WPUB	set	3964
    59  0000                     _TRISC	set	3988
    60  0000                     _TRISB	set	3987
    61  0000                     _LATC	set	3979
    62  0000                     _ANSELH	set	3967
    63  0000                     _ANSEL	set	3966
    64  0000                     _LATA	set	3977
    65  0000                     _LATB	set	3978
    66  0000                     _OSCTUNE	set	3995
    67  0000                     _OSCCON	set	4051
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  00FEC6                     __pcinit:
    73                           	opt callstack 0
    74  00FEC6                     start_initialization:
    75                           	opt callstack 0
    76  00FEC6                     __initialization:
    77                           	opt callstack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (1 bytes)
    80  00FEC6  6A05               	clrf	__pbssCOMRAM& (0+255),c
    81  00FEC8                     end_of_initialization:
    82                           	opt callstack 0
    83  00FEC8                     __end_of__initialization:
    84                           	opt callstack 0
    85  00FEC8  0100               	movlb	0
    86  00FECA  EF71  F07F         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89  000005                     __pbssCOMRAM:
    90                           	opt callstack 0
    91  000005                     _lcd_bits:
    92                           	opt callstack 0
    93  000005                     	ds	1
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt callstack 0
    98  000001                     lcd_write@c:
    99                           	opt callstack 0
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	1
   103  000002                     ??_lcd_clear:
   104                           
   105                           ; 1 bytes @ 0x1
   106  000002                     	ds	1
   107  000003                     ??_lcd_init:
   108                           
   109                           ; 1 bytes @ 0x2
   110  000003                     	ds	2
   111  000005                     
   112                           ; 1 bytes @ 0x4
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 64 in file "main.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called:    3
   138 ;; This function calls:
   139 ;;		_SYSTEM_Initialize
   140 ;;		_lcd_clear
   141 ;;		_lcd_init
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  00FEE2                     __ptext0:
   149                           	opt callstack 0
   150  00FEE2                     _main:
   151                           	opt callstack 28
   152  00FEE2                     
   153                           ;main.c: 67:     SYSTEM_Initialize();
   154  00FEE2  EC6C  F07F         	call	_SYSTEM_Initialize	;wreg free
   155                           
   156                           ;main.c: 71:     lcd_init();
   157  00FEE6  EC9B  F07F         	call	_lcd_init	;wreg free
   158                           
   159                           ;main.c: 72:     lcd_clear();
   160  00FEEA  EC7B  F07F         	call	_lcd_clear	;wreg free
   161  00FEEE                     l101:
   162  00FEEE  EF77  F07F         	goto	l101
   163  00FEF2  EF00  F000         	goto	start
   164  00FEF6                     __end_of_main:
   165                           	opt callstack 0
   166                           
   167 ;; *************** function _lcd_init *****************
   168 ;; Defined at:
   169 ;;		line 99 in file "lcd_singlebits_configuration.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  init_value      1    0        unsigned char 
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;Total ram usage:        2 bytes
   188 ;; Hardware stack levels used:    1
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_lcd_clear
   192 ;;		_lcd_write
   193 ;; This function is called by:
   194 ;;		_main
   195 ;;		_lcd_start
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	text1
   200  00FF36                     __ptext1:
   201                           	opt callstack 0
   202  00FF36                     _lcd_init:
   203                           	opt callstack 28
   204  00FF36                     
   205                           ;lcd_singlebits_configuration.c: 104:  PORTCbits.RC4 = 0;
   206  00FF36  9882               	bcf	130,4,c	;volatile
   207  00FF38                     
   208                           ;lcd_singlebits_configuration.c: 105:  PORTCbits.RC5 = 0;
   209  00FF38  9A82               	bcf	130,5,c	;volatile
   210  00FF3A                     
   211                           ;lcd_singlebits_configuration.c: 108:  _delay((unsigned long)((15)*(8000000/4000.0)));
   212  00FF3A  0E27               	movlw	39
   213  00FF3C  6E03               	movwf	??_lcd_init^0,c
   214  00FF3E  0EF5               	movlw	245
   215  00FF40                     u177:
   216  00FF40  2EE8               	decfsz	wreg,f,c
   217  00FF42  D7FE               	bra	u177
   218  00FF44  2E03               	decfsz	??_lcd_init^0,f,c
   219  00FF46  D7FC               	bra	u177
   220  00FF48  F000               	nop	
   221  00FF4A                     
   222                           ;lcd_singlebits_configuration.c: 109:  PORTB = init_value;
   223  00FF4A  0E03               	movlw	3
   224  00FF4C  6E81               	movwf	129,c	;volatile
   225  00FF4E                     
   226                           ;lcd_singlebits_configuration.c: 110:  ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   227  00FF4E  8A82               	bsf	130,5,c	;volatile
   228  00FF50  9A82               	bcf	130,5,c	;volatile
   229  00FF52                     
   230                           ;lcd_singlebits_configuration.c: 111:  _delay((unsigned long)((5)*(8000000/4000.0)));
   231  00FF52  0E0D               	movlw	13
   232  00FF54  6E03               	movwf	??_lcd_init^0,c
   233  00FF56  0EFC               	movlw	252
   234  00FF58                     u187:
   235  00FF58  2EE8               	decfsz	wreg,f,c
   236  00FF5A  D7FE               	bra	u187
   237  00FF5C  2E03               	decfsz	??_lcd_init^0,f,c
   238  00FF5E  D7FC               	bra	u187
   239  00FF60                     
   240                           ;lcd_singlebits_configuration.c: 112:  ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   241  00FF60  8A82               	bsf	130,5,c	;volatile
   242  00FF62  9A82               	bcf	130,5,c	;volatile
   243  00FF64                     
   244                           ;lcd_singlebits_configuration.c: 113:  _delay((unsigned long)((200)*(8000000/4000000.0))
      +                          );
   245  00FF64  0E85               	movlw	133
   246  00FF66                     u197:
   247  00FF66  2EE8               	decfsz	wreg,f,c
   248  00FF68  D7FE               	bra	u197
   249  00FF6A  F000               	nop	
   250  00FF6C                     
   251                           ;lcd_singlebits_configuration.c: 114:  ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   252  00FF6C  8A82               	bsf	130,5,c	;volatile
   253  00FF6E  9A82               	bcf	130,5,c	;volatile
   254  00FF70                     
   255                           ;lcd_singlebits_configuration.c: 115:  _delay((unsigned long)((200)*(8000000/4000000.0))
      +                          );
   256  00FF70  0E85               	movlw	133
   257  00FF72                     u207:
   258  00FF72  2EE8               	decfsz	wreg,f,c
   259  00FF74  D7FE               	bra	u207
   260  00FF76  F000               	nop	
   261                           
   262                           ;lcd_singlebits_configuration.c: 116:  PORTB = 2;
   263  00FF78  0E02               	movlw	2
   264  00FF7A  6E81               	movwf	129,c	;volatile
   265  00FF7C                     
   266                           ;lcd_singlebits_configuration.c: 117:  ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   267  00FF7C  8A82               	bsf	130,5,c	;volatile
   268  00FF7E  9A82               	bcf	130,5,c	;volatile
   269  00FF80                     
   270                           ;lcd_singlebits_configuration.c: 119:  lcd_write(0x28);
   271  00FF80  0E28               	movlw	40
   272  00FF82  ECCC  F07F         	call	_lcd_write
   273  00FF86                     
   274                           ;lcd_singlebits_configuration.c: 120:     lcd_write(0x0C);
   275  00FF86  0E0C               	movlw	12
   276  00FF88  ECCC  F07F         	call	_lcd_write
   277  00FF8C                     
   278                           ;lcd_singlebits_configuration.c: 122:  lcd_clear();
   279  00FF8C  EC7B  F07F         	call	_lcd_clear	;wreg free
   280  00FF90                     
   281                           ;lcd_singlebits_configuration.c: 123:  lcd_write(0x6);
   282  00FF90  0E06               	movlw	6
   283  00FF92  ECCC  F07F         	call	_lcd_write
   284  00FF96  0012               	return		;funcret
   285  00FF98                     __end_of_lcd_init:
   286                           	opt callstack 0
   287                           
   288 ;; *************** function _lcd_clear *****************
   289 ;; Defined at:
   290 ;;		line 59 in file "lcd_singlebits_configuration.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;Total ram usage:        1 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		_lcd_write
   313 ;; This function is called by:
   314 ;;		_main
   315 ;;		_lcd_init
   316 ;;		_lcd_start
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text2
   321  00FEF6                     __ptext2:
   322                           	opt callstack 0
   323  00FEF6                     _lcd_clear:
   324                           	opt callstack 28
   325  00FEF6                     
   326                           ;lcd_singlebits_configuration.c: 61:  PORTCbits.RC4 = 0;
   327  00FEF6  9882               	bcf	130,4,c	;volatile
   328  00FEF8                     
   329                           ;lcd_singlebits_configuration.c: 62:  lcd_write(0x1);
   330  00FEF8  0E01               	movlw	1
   331  00FEFA  ECCC  F07F         	call	_lcd_write
   332  00FEFE                     
   333                           ;lcd_singlebits_configuration.c: 63:  _delay((unsigned long)((2)*(8000000/4000.0)));
   334  00FEFE  0E06               	movlw	6
   335  00FF00  6E02               	movwf	??_lcd_clear^0,c
   336  00FF02  0E30               	movlw	48
   337  00FF04                     u217:
   338  00FF04  2EE8               	decfsz	wreg,f,c
   339  00FF06  D7FE               	bra	u217
   340  00FF08  2E02               	decfsz	??_lcd_clear^0,f,c
   341  00FF0A  D7FC               	bra	u217
   342  00FF0C  F000 F000          	nop2	
   343  00FF10  0012               	return		;funcret
   344  00FF12                     __end_of_lcd_clear:
   345                           	opt callstack 0
   346                           
   347 ;; *************** function _lcd_write *****************
   348 ;; Defined at:
   349 ;;		line 38 in file "lcd_singlebits_configuration.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;  c               1    wreg     unsigned char 
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  c               1    0[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;Total ram usage:        1 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_lcd_clear
   373 ;;		_lcd_init
   374 ;;		_lcd_puts
   375 ;;		_lcd_putch
   376 ;;		_lcd_goto
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text3
   381  00FF98                     __ptext3:
   382                           	opt callstack 0
   383  00FF98                     _lcd_write:
   384                           	opt callstack 29
   385                           
   386                           ;incstack = 0
   387                           ;lcd_write@c stored from wreg
   388  00FF98  6E01               	movwf	lcd_write@c^0,c
   389  00FF9A                     
   390                           ;lcd_singlebits_configuration.c: 38: lcd_write(unsigned char c);lcd_singlebits_configura
      +                          tion.c: 39: {;lcd_singlebits_configuration.c: 40:     lcd_bits.ch=c;
   391  00FF9A  C001  F005         	movff	lcd_write@c,_lcd_bits
   392  00FF9E                     
   393                           ;lcd_singlebits_configuration.c: 42:  _delay((unsigned long)((20)*(8000000/4000000.0)));
   394  00FF9E  0E0D               	movlw	13
   395  00FFA0                     u227:
   396  00FFA0  2EE8               	decfsz	wreg,f,c
   397  00FFA2  D7FE               	bra	u227
   398  00FFA4  F000               	nop	
   399  00FFA6                     
   400                           ;lcd_singlebits_configuration.c: 43:     PORTBbits.RB5 = lcd_bits.bits.b7;
   401  00FFA6  AE05               	btfss	_lcd_bits^0,7,c
   402  00FFA8  D002               	bra	u15
   403  00FFAA  8A81               	bsf	129,5,c	;volatile
   404  00FFAC  D001               	bra	u17
   405  00FFAE                     u15:
   406  00FFAE  9A81               	bcf	129,5,c	;volatile
   407  00FFB0                     u17:
   408  00FFB0                     
   409                           ;lcd_singlebits_configuration.c: 44:     PORTBbits.RB4 = lcd_bits.bits.b6;
   410  00FFB0  AC05               	btfss	_lcd_bits^0,6,c
   411  00FFB2  D002               	bra	u25
   412  00FFB4  8881               	bsf	129,4,c	;volatile
   413  00FFB6  D001               	bra	u27
   414  00FFB8                     u25:
   415  00FFB8  9881               	bcf	129,4,c	;volatile
   416  00FFBA                     u27:
   417  00FFBA                     
   418                           ;lcd_singlebits_configuration.c: 45:     PORTBbits.RB3 = lcd_bits.bits.b5;
   419  00FFBA  AA05               	btfss	_lcd_bits^0,5,c
   420  00FFBC  D002               	bra	u35
   421  00FFBE  8681               	bsf	129,3,c	;volatile
   422  00FFC0  D001               	bra	u37
   423  00FFC2                     u35:
   424  00FFC2  9681               	bcf	129,3,c	;volatile
   425  00FFC4                     u37:
   426  00FFC4                     
   427                           ;lcd_singlebits_configuration.c: 46:     PORTBbits.RB2 = lcd_bits.bits.b4;
   428  00FFC4  A805               	btfss	_lcd_bits^0,4,c
   429  00FFC6  D002               	bra	u45
   430  00FFC8  8481               	bsf	129,2,c	;volatile
   431  00FFCA  D001               	bra	u47
   432  00FFCC                     u45:
   433  00FFCC  9481               	bcf	129,2,c	;volatile
   434  00FFCE                     u47:
   435  00FFCE                     
   436                           ;lcd_singlebits_configuration.c: 47:     ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   437  00FFCE  8A82               	bsf	130,5,c	;volatile
   438  00FFD0  9A82               	bcf	130,5,c	;volatile
   439  00FFD2                     
   440                           ;lcd_singlebits_configuration.c: 49:     PORTBbits.RB5 = lcd_bits.bits.b3;
   441  00FFD2  A605               	btfss	_lcd_bits^0,3,c
   442  00FFD4  D002               	bra	u55
   443  00FFD6  8A81               	bsf	129,5,c	;volatile
   444  00FFD8  D001               	bra	u57
   445  00FFDA                     u55:
   446  00FFDA  9A81               	bcf	129,5,c	;volatile
   447  00FFDC                     u57:
   448  00FFDC                     
   449                           ;lcd_singlebits_configuration.c: 50:     PORTBbits.RB4 = lcd_bits.bits.b2;
   450  00FFDC  A405               	btfss	_lcd_bits^0,2,c
   451  00FFDE  D002               	bra	u65
   452  00FFE0  8881               	bsf	129,4,c	;volatile
   453  00FFE2  D001               	bra	u67
   454  00FFE4                     u65:
   455  00FFE4  9881               	bcf	129,4,c	;volatile
   456  00FFE6                     u67:
   457  00FFE6                     
   458                           ;lcd_singlebits_configuration.c: 51:     PORTBbits.RB3 = lcd_bits.bits.b1;
   459  00FFE6  A205               	btfss	_lcd_bits^0,1,c
   460  00FFE8  D002               	bra	u75
   461  00FFEA  8681               	bsf	129,3,c	;volatile
   462  00FFEC  D001               	bra	u77
   463  00FFEE                     u75:
   464  00FFEE  9681               	bcf	129,3,c	;volatile
   465  00FFF0                     u77:
   466  00FFF0                     
   467                           ;lcd_singlebits_configuration.c: 52:     PORTBbits.RB2 = lcd_bits.bits.b0;
   468  00FFF0  A005               	btfss	_lcd_bits^0,0,c
   469  00FFF2  D002               	bra	u85
   470  00FFF4  8481               	bsf	129,2,c	;volatile
   471  00FFF6  D001               	bra	u87
   472  00FFF8                     u85:
   473  00FFF8  9481               	bcf	129,2,c	;volatile
   474  00FFFA                     u87:
   475  00FFFA                     
   476                           ;lcd_singlebits_configuration.c: 53:     ((PORTCbits.RC5 = 1),(PORTCbits.RC5=0));
   477  00FFFA  8A82               	bsf	130,5,c	;volatile
   478  00FFFC  9A82               	bcf	130,5,c	;volatile
   479  00FFFE  0012               	return		;funcret
   480  010000                     __end_of_lcd_write:
   481                           	opt callstack 0
   482                           
   483 ;; *************** function _SYSTEM_Initialize *****************
   484 ;; Defined at:
   485 ;;		line 108 in file "mcc_generated_files/mcc.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    1
   506 ;; This function calls:
   507 ;;		_OSCILLATOR_Initialize
   508 ;;		_PIN_MANAGER_Initialize
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text4
   515  00FED8                     __ptext4:
   516                           	opt callstack 0
   517  00FED8                     _SYSTEM_Initialize:
   518                           	opt callstack 29
   519  00FED8                     
   520                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
   521  00FED8  EC89  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   522                           
   523                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
   524  00FEDC  EC67  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   525  00FEE0  0012               	return		;funcret
   526  00FEE2                     __end_of_SYSTEM_Initialize:
   527                           	opt callstack 0
   528                           
   529 ;; *************** function _PIN_MANAGER_Initialize *****************
   530 ;; Defined at:
   531 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_SYSTEM_Initialize
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text5
   559  00FF12                     __ptext5:
   560                           	opt callstack 0
   561  00FF12                     _PIN_MANAGER_Initialize:
   562                           	opt callstack 29
   563  00FF12                     
   564                           ;mcc_generated_files/pin_manager.c: 51:     LATB = 0x0;
   565  00FF12  0E00               	movlw	0
   566  00FF14  6E8A               	movwf	138,c	;volatile
   567                           
   568                           ;mcc_generated_files/pin_manager.c: 52:     LATA = 0x0;
   569  00FF16  0E00               	movlw	0
   570  00FF18  6E89               	movwf	137,c	;volatile
   571                           
   572                           ;mcc_generated_files/pin_manager.c: 53:     ANSEL = 0x1F;
   573  00FF1A  0E1F               	movlw	31
   574  00FF1C  6E7E               	movwf	126,c	;volatile
   575                           
   576                           ;mcc_generated_files/pin_manager.c: 54:     ANSELH = 0x0;
   577  00FF1E  0E00               	movlw	0
   578  00FF20  6E7F               	movwf	127,c	;volatile
   579                           
   580                           ;mcc_generated_files/pin_manager.c: 55:     LATC = 0x0;
   581  00FF22  0E00               	movlw	0
   582  00FF24  6E8B               	movwf	139,c	;volatile
   583                           
   584                           ;mcc_generated_files/pin_manager.c: 56:     TRISB = 0x0;
   585  00FF26  0E00               	movlw	0
   586  00FF28  6E93               	movwf	147,c	;volatile
   587  00FF2A                     
   588                           ;mcc_generated_files/pin_manager.c: 57:     TRISC = 0xFF;
   589  00FF2A  6894               	setf	148,c	;volatile
   590  00FF2C                     
   591                           ;mcc_generated_files/pin_manager.c: 58:     WPUB = 0xFF;
   592  00FF2C  687C               	setf	124,c	;volatile
   593  00FF2E                     
   594                           ;mcc_generated_files/pin_manager.c: 59:     TRISA = 0xFF;
   595  00FF2E  6892               	setf	146,c	;volatile
   596  00FF30                     
   597                           ;mcc_generated_files/pin_manager.c: 61:     INTCON2bits.nRBPU = 0x1;
   598  00FF30  8EF1               	bsf	241,7,c	;volatile
   599  00FF32                     
   600                           ;mcc_generated_files/pin_manager.c: 65:     INTCONbits.RBIE = 0;
   601  00FF32  96F2               	bcf	242,3,c	;volatile
   602  00FF34  0012               	return		;funcret
   603  00FF36                     __end_of_PIN_MANAGER_Initialize:
   604                           	opt callstack 0
   605                           
   606 ;; *************** function _OSCILLATOR_Initialize *****************
   607 ;; Defined at:
   608 ;;		line 115 in file "mcc_generated_files/mcc.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_SYSTEM_Initialize
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text6
   636  00FECE                     __ptext6:
   637                           	opt callstack 0
   638  00FECE                     _OSCILLATOR_Initialize:
   639                           	opt callstack 29
   640  00FECE                     
   641                           ;mcc_generated_files/mcc.c: 118:     OSCCON = 0x62;
   642  00FECE  0E62               	movlw	98
   643  00FED0  6ED3               	movwf	211,c	;volatile
   644                           
   645                           ;mcc_generated_files/mcc.c: 120:     OSCTUNE = 0x00;
   646  00FED2  0E00               	movlw	0
   647  00FED4  6E9B               	movwf	155,c	;volatile
   648  00FED6  0012               	return		;funcret
   649  00FED8                     __end_of_OSCILLATOR_Initialize:
   650                           	opt callstack 0
   651  0000                     
   652                           	psect	rparam
   653  0000                     tosu	equ	0xFFF
   654                           tosh	equ	0xFFE
   655                           tosl	equ	0xFFD
   656                           stkptr	equ	0xFFC
   657                           pclatu	equ	0xFFB
   658                           pclath	equ	0xFFA
   659                           pcl	equ	0xFF9
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           prodh	equ	0xFF4
   665                           prodl	equ	0xFF3
   666                           indf0	equ	0xFEF
   667                           postinc0	equ	0xFEE
   668                           postdec0	equ	0xFED
   669                           preinc0	equ	0xFEC
   670                           plusw0	equ	0xFEB
   671                           fsr0h	equ	0xFEA
   672                           fsr0l	equ	0xFE9
   673                           wreg	equ	0xFE8
   674                           indf1	equ	0xFE7
   675                           postinc1	equ	0xFE6
   676                           postdec1	equ	0xFE5
   677                           preinc1	equ	0xFE4
   678                           plusw1	equ	0xFE3
   679                           fsr1h	equ	0xFE2
   680                           fsr1l	equ	0xFE1
   681                           bsr	equ	0xFE0
   682                           indf2	equ	0xFDF
   683                           postinc2	equ	0xFDE
   684                           postdec2	equ	0xFDD
   685                           preinc2	equ	0xFDC
   686                           plusw2	equ	0xFDB
   687                           fsr2h	equ	0xFDA
   688                           fsr2l	equ	0xFD9
   689                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                  _SYSTEM_Initialize
                          _lcd_clear
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      45
                                              2 COMRAM     2     2      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      15
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _lcd_clear
     _lcd_write
   _lcd_init
     _lcd_clear
       _lcd_write
     _lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      32        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 29 17:35:05 2020

                             l11 FEE0                               l14 FED6  
                             l39 FF34                               u15 FFAE  
                             u25 FFB8                               u17 FFB0  
                             u35 FFC2                               u27 FFBA  
                             u45 FFCC                               u37 FFC4  
                             u55 FFDA                               u47 FFCE  
                             u65 FFE4                               u57 FFDC  
                             u75 FFEE                               u67 FFE6  
                             u85 FFF8                               u77 FFF0  
                             u87 FFFA                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l101 FEEE  
                            l102 FEEE                              l120 FF10  
                            l117 FFFE                              l135 FF96  
                            l820 FFB0                              l900 FF4A  
                            l830 FFD2                              l822 FFBA  
                            l814 FF9A                              l910 FF62  
                            l902 FF4E                              l840 FFFC  
                            l832 FFDC                              l824 FFC4  
                            l816 FF9E                              l920 FF7C  
                            l912 FF64                              l904 FF50  
                            l850 FF30                              l842 FF12  
                            l834 FFE6                              l826 FFCE  
                            l818 FFA6                              l930 FF90  
                            l922 FF7E                              l914 FF6C  
                            l906 FF52                              l852 FF32  
                            l844 FF2A                              l836 FFF0  
                            l828 FFD0                              l924 FF80  
                            l916 FF6E                              l908 FF60  
                            l854 FECE                              l846 FF2C  
                            l838 FFFA                              l870 FEFE  
                            l926 FF86                              l918 FF70  
                            l848 FF2E                              l872 FED8  
                            l928 FF8C                              l866 FEF6  
                            l868 FEF8                              l892 FF36  
                            l894 FF36                              l896 FF38  
                            l898 FF3A                              l986 FEE2  
                   __CFG_CPB$OFF 000000                              u207 FF72  
                            u217 FF04                              u227 FFA0  
                            u177 FF40                     __CFG_CPD$OFF 000000  
                            u187 FF58                              u197 FF66  
                   __CFG_BORV$18 000000                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _WPUB 000F7C                             _main FEE2  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 000A  
  __end_of_OSCILLATOR_Initialize FED8                            ?_main 0001  
                          _ANSEL 000F7E                   __CFG_DEBUG$OFF 000000  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                 __CFG_BOREN$OFF 000000                   __CFG_HFOFST$ON 000000  
                 __CFG_MCLRE$OFF 000000                  __initialization FEC6  
                   __end_of_main FEF6                           ??_main 0005  
                  __activetblptr 000000                           _ANSELH 000F7F  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                 __CFG_XINST$OFF 000000                 __end_of_lcd_init FF98  
                 __CFG_STVREN$ON 000000                _SYSTEM_Initialize FED8  
                     __accesstop 0060          __end_of__initialization FEC8  
                __CFG_PBADEN$OFF 000000               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0001               __size_of_lcd_clear 001C  
             __size_of_lcd_write 0068        __end_of_SYSTEM_Initialize FEE2  
                        _OSCTUNE 000F9B                        ?_lcd_init 0001  
                        __Hparam 0000                          __Lparam 0000  
              __end_of_lcd_clear FF12                __end_of_lcd_write 0000  
                        __pcinit FEC6                          __ramtop 1000  
                        __ptext0 FEE2                          __ptext1 FF36  
                        __ptext2 FEF6                          __ptext3 FF98  
                        __ptext4 FED8                          __ptext5 FF12  
                        __ptext6 FECE            _OSCILLATOR_Initialize FECE  
       ??_PIN_MANAGER_Initialize 0001       __size_of_SYSTEM_Initialize 000A  
                     ??_lcd_init 0003             end_of_initialization FEC8  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
                     lcd_write@c 0001           ?_OSCILLATOR_Initialize 0001  
            start_initialization FEC6  __size_of_PIN_MANAGER_Initialize 0024  
               __CFG_LPT1OSC$OFF 000000                      __pbssCOMRAM 0005  
              __size_of_lcd_init 0062           _PIN_MANAGER_Initialize FF12  
              __CFG_CCP2MX$PORTC 000000                        _lcd_clear FEF6  
                      _lcd_write FF98                 __CFG_WDTPS$32768 000000  
                     ?_lcd_clear 0001                       ?_lcd_write 0001  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000          ??_OSCILLATOR_Initialize 0001  
                       _lcd_bits 0005                         _lcd_init FF36  
                  __size_of_main 0014                      ??_lcd_clear 0002  
                    ??_lcd_write 0001                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0001   __end_of_PIN_MANAGER_Initialize FF36  
              __CFG_FOSC$INTIO67 000000  
